name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KEY_ALIAS: swamprabbit
      KEY_DNAME: "CN=Swamp Rabbit, OU=Dev, O=You, L=City, ST=State, C=US"

    steps:
      # 1. Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Node.js (for Yarn/npm)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. Install NPM/Yarn dependencies
      - name: Install JS dependencies
        run: yarn install --frozen-lockfile

      # 4. Setup Java 11
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      # 5. Download & install Android SDK command‑line tools,
      #    accept licenses, and add platform‑tools to PATH
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          # installs the SDK cmdline‑tools (16.0), platform‑tools, and build‑tools
          packages: |
            tools
            platform-tools
            'platforms;android-33'
            'build-tools;33.0.0'
          accept-android-sdk-licenses: true
          cmdline-tools-version: 8512546  # long version for tools 7.0

      # 6. Generate an ephemeral keystore each run
      - name: Generate random keystore password
        id: genpw
        run: |
          echo "::set-output name=PASS::$(openssl rand -hex 16)"

      # 7. Create ephemeral keystore
      - name: Create ephemeral keystore
        run: |
          mkdir -p android/app
          keytool -genkeypair \
            -v \
            -keystore android/app/my-release-key.jks \
            -alias $KEY_ALIAS \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -storepass ${{ steps.genpw.outputs.PASS }} \
            -keypass   ${{ steps.genpw.outputs.PASS }} \
            -dname     "$KEY_DNAME"

      # 8. Configure Gradle with that keystore
      - name: Configure Gradle signing
        run: |
          cat <<EOF >> android/gradle.properties
          MYAPP_UPLOAD_STORE_FILE=my-release-key.jks
          MYAPP_UPLOAD_KEY_ALIAS=$KEY_ALIAS
          MYAPP_UPLOAD_STORE_PASSWORD=${{ steps.genpw.outputs.PASS }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ steps.genpw.outputs.PASS }}
          EOF

      # 9. Build the release APK
      - name: Build Release APK
        working-directory: android
        run: ./gradlew clean assembleRelease

      # 10. Upload the APK as an artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk
