name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Where the SDK will live
      ANDROID_SDK_ROOT: $HOME/Android/Sdk
      ANDROID_HOME:     $HOME/Android/Sdk

      # Keystore settings
      KEY_ALIAS: swamprabbit
      KEY_DNAME: "CN=Swamp Rabbit, OU=Dev, O=You, L=City, ST=State, C=US"

    steps:
      # 1. Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Install JS deps
      - name: Setup Node.js & install deps
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: yarn install --frozen-lockfile

      # 3. Install JDK17
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # 4. Bootstrap Android SDK tools & accept licenses
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true  # installs 'tools' + 'platform-tools' and adds sdkmanager to PATH 0

      # 5. Install Android 33 platform & build‑tools via sdkmanager
      - name: Install Android platform & build-tools
        run: |
          sdkmanager "platforms;android-33" "build-tools;33.0.0"

      # 6. Generate & export a random keystore password
      - name: Generate keystore password
        run: echo "KEYSTORE_PASS=$(openssl rand -hex 16)" >> $GITHUB_ENV

      # 7. Create ephemeral JKS keystore
      - name: Create ephemeral keystore
        run: |
          mkdir -p android/app
          keytool -genkeypair \
            -v \
            -keystore android/app/my-release-key.jks \
            -alias $KEY_ALIAS \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -storepass $KEYSTORE_PASS \
            -keypass   $KEYSTORE_PASS \
            -dname     "$KEY_DNAME"

      # 8. Wire the keystore into Gradle
      - name: Configure Gradle signing
        run: |
          cat <<EOF >> android/gradle.properties
          MYAPP_UPLOAD_STORE_FILE=my-release-key.jks
          MYAPP_UPLOAD_KEY_ALIAS=$KEY_ALIAS
          MYAPP_UPLOAD_STORE_PASSWORD=$KEYSTORE_PASS
          MYAPP_UPLOAD_KEY_PASSWORD=$KEYSTORE_PASS
          EOF

      # 9. Ensure the Gradle wrapper is executable
      - name: Make gradlew executable
        run: chmod +x android/gradlew

      # 10. Build the release APK
      - name: Build Release APK
        working-directory: android
        run: ./gradlew clean assembleRelease

      # 11. Upload the signed APK
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk
