name: Android APK (auto-scaffold + API 33 stable build)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KEY_ALIAS: swamprabbit

    steps:
      # 0 – Check out full history so we can commit scaffold
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1 – Always scaffold & prebuild the Expo native project
      - name: Bootstrap & prebuild Expo native
        run: |
          set -euo pipefail
          echo "::notice::Bootstrapping Expo native project…"

          APP_NAME="SwampRabbitApp"
          TEMPLATE="expo-template-blank-typescript"
          npx create-expo-app@latest "$APP_NAME" -t "$TEMPLATE" --yes --no-install
          shopt -s dotglob
          mv "$APP_NAME"/* .
          rm -rf "$APP_NAME"

          yarn install --frozen-lockfile
          yarn add \
            @react-native-async-storage/async-storage \
            react-native-encrypted-storage \
            react-native-sqlite-storage \
            react-native-linear-gradient \
            @react-native-community/slider \
            react-native-markdown-display \
            react-native-vector-icons \
            react-native-image-picker \
            @react-native-clipboard/clipboard \
            react-native-config \
            react-native-fs \
            @react-navigation/native \
            @react-navigation/bottom-tabs \
            react-native-device-info \
            axios \
            crypto-js

          npx expo prebuild --no-install --non-interactive

      # 2 – Node/Yarn setup
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - run: yarn install --frozen-lockfile

      # 3 – Java & Android SDK (API 33)
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK (API 33 stable)
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true
          packages: |
            platform-tools
            platforms;android-33
            build-tools;33.0.2

      # 4 – Ensure Gradle wrapper is present
      - name: Install Gradle wrapper
        working-directory: android
        run: ./gradlew wrapper

      # 5 – Generate a fresh keystore per run
      - name: Generate signing keystore
        run: |
          STORE_PASS=$(openssl rand -hex 16)
          KEY_PASS=$(openssl rand -hex 16)
          echo "STORE_PASS=$STORE_PASS" >> "$GITHUB_ENV"
          echo "KEY_PASS=$KEY_PASS"     >> "$GITHUB_ENV"

          mkdir -p android/app
          keytool -genkeypair -v \
            -keystore android/app/release.keystore \
            -alias "$KEY_ALIAS" \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass "$STORE_PASS" \
            -keypass  "$KEY_PASS" \
            -dname "CN=SwampRabbit, OU=Dev, O=Booper, L=Greenville, S=SC, C=US"

      # 6 – Inject signing into Gradle
      - name: Configure Gradle signing
        run: |
          cat <<EOF >> android/gradle.properties
          MYAPP_UPLOAD_STORE_FILE=release.keystore
          MYAPP_UPLOAD_KEY_ALIAS=${{ env.KEY_ALIAS }}
          MYAPP_UPLOAD_STORE_PASSWORD=${{ env.STORE_PASS }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ env.KEY_PASS }}
          EOF

      # 7 – Build and upload the signed APK
      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build release APK
        working-directory: android
        run: ./gradlew clean assembleRelease --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: swamp-rabbit-oracle.apk
          path: android/app/build/outputs/apk/release/app-release.apk
